{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KYS96\\\\spheat_4\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport * as locationsData from \"./data/locations.json\";\n\nfunction Map() {\n  const [selectedLoc, setSelectedLoc] = useState(null);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"./spheat_logo.jfif\",\n    style: {\n      width: \"15vw\",\n      height: \"15hw\",\n      position: \"absolute\",\n      top: 10,\n      left: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    style: {\n      width: \"25vw\",\n      height: \"15hw\",\n      position: \"absolute\",\n      top: 10,\n      left: \"20vw\",\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Welcome to Saint-Petersburg!\")), React.createElement(\"p\", {\n    style: {\n      width: \"15vw\",\n      height: \"15hw\",\n      color: \"red\",\n      position: \"absolute\",\n      top: 130,\n      left: \"20vw\",\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Please, pick the location you are interested in!\"), React.createElement(GoogleMap, {\n    defaultZoom: 14,\n    defaultCenter: {\n      lat: 59.93848,\n      lng: 30.312481\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, locationsData.features.map(loc => React.createElement(Marker, {\n    key: loc._id,\n    position: {\n      lat: loc.gps[0],\n      lng: loc.gps[1]\n    },\n    onClick: () => {\n      setSelectedLoc(loc);\n    }\n    /*\r\n    icon={{\r\n    url:\"/spheat_round.png\",\r\n    scaledSize: new window.google.maps.Size(25,25)\r\n    }} \r\n    */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), selectedLoc && React.createElement(InfoWindow, {\n    position: {\n      lat: selectedLoc.gps[0],\n      lng: selectedLoc.gps[1]\n    },\n    onCloseClick: () => {\n      setSelectedLoc(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, selectedLoc.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, selectedLoc.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, selectedLoc.address), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \" \", selectedLoc.image, \" \")))));\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\nexport default function App() {\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(WrappedMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCPlfNpozZisS3dxh7AFQz8pWx9ttHmdgQ`,\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/KYS96/spheat_4/src/App.js"],"names":["React","useState","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","locationsData","Map","selectedLoc","setSelectedLoc","width","height","position","top","left","backgroundColor","color","lat","lng","features","map","loc","_id","gps","name","description","address","image","WrappedMap","App"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  withScriptjs,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"react-google-maps\";\r\nimport * as locationsData from \"./data/locations.json\";\r\n\r\nfunction Map() {\r\n  const [selectedLoc, setSelectedLoc] = useState(null);\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img\r\n          src={\"./spheat_logo.jfif\"}\r\n          style={{\r\n            width: \"15vw\",\r\n            height: \"15hw\",\r\n            position: \"absolute\",\r\n            top: 10,\r\n            left: 10,\r\n          }}\r\n        />\r\n        <h2\r\n          style={{\r\n            width: \"25vw\",\r\n            height: \"15hw\",\r\n            position: \"absolute\",\r\n            top: 10,\r\n            left: \"20vw\",\r\n            backgroundColor: \"white\",\r\n          }}\r\n        >\r\n          Welcome to Saint-Petersburg!\r\n        </h2>\r\n      </header>\r\n      <p\r\n        style={{\r\n          width: \"15vw\",\r\n          height: \"15hw\",\r\n          color: \"red\",\r\n          position: \"absolute\",\r\n          top: 130,\r\n          left: \"20vw\",\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        Please, pick the location you are interested in!\r\n      </p>\r\n      <GoogleMap\r\n        defaultZoom={14}\r\n        defaultCenter={{ lat: 59.93848, lng: 30.312481 }}\r\n      >\r\n        {locationsData.features.map((loc) => (\r\n          <Marker\r\n            key={loc._id}\r\n            position={{\r\n              lat: loc.gps[0],\r\n              lng: loc.gps[1],\r\n            }}\r\n            onClick={() => {\r\n              setSelectedLoc(loc);\r\n            }}\r\n            /*\r\n          icon={{\r\n            url:\"/spheat_round.png\",\r\n            scaledSize: new window.google.maps.Size(25,25)\r\n          }} \r\n          */\r\n          />\r\n        ))}\r\n\r\n        {selectedLoc && (\r\n          <InfoWindow\r\n            position={{\r\n              lat: selectedLoc.gps[0],\r\n              lng: selectedLoc.gps[1],\r\n            }}\r\n            onCloseClick={() => {\r\n              setSelectedLoc(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{selectedLoc.name}</h2>\r\n              <p>{selectedLoc.description}</p>\r\n              <p>{selectedLoc.address}</p>\r\n              <p> {selectedLoc.image} </p>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\nexport default function App() {\r\n  return (\r\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\r\n      <WrappedMap\r\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyCPlfNpozZisS3dxh7AFQz8pWx9ttHmdgQ`}\r\n        loadingElement={<div style={{ height: `100%` }} />}\r\n        containerElement={<div style={{ height: `100%` }} />}\r\n        mapElement={<div style={{ height: `100%` }} />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}